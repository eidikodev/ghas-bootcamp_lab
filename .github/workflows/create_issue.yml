name: Create GitHub Issue from Webhook Payload

on:
  push:
    branches:
      - main  # Define the branch to trigger the workflow (adjust as needed)

jobs:
  create-issue:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Extract Delivery ID
      id: extract-delivery-id
      run: |
        # Extract Delivery ID from the webhook payload
        API_RESPONSE=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries")
        DELIVERY_ID=$(echo $API_RESPONSE | jq -r '.[0].id')
        if [ -z "$DELIVERY_ID" ]; then
          echo "No deliveries found or error in API response."
          exit 1
        fi
        echo "Delivery ID: $DELIVERY_ID"
        echo "::set-output name=delivery_id::$DELIVERY_ID"
    
    - name: Get Webhook Payload
      id: get-webhook-payload
      run: |
        # Get the webhook payload using the Delivery ID
        TOKEN="${{ secrets.GITHUB_TOKEN }}"
        REPO_OWNER="${{ github.repository_owner }}"
        REPO_NAME="${{ github.event.repository.name }}"
        DELIVERY_ID="${{ steps.extract-delivery-id.outputs.delivery_id }}"
        if [ -z "$DELIVERY_ID" ]; then
          echo "No Delivery ID found. Exiting."
          exit 1
        fi
        PAYLOAD=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries/${DELIVERY_ID}")
        if [ -z "$PAYLOAD" ]; then
          echo "No payload found or error in API response."
          exit 1
        fi
        echo "Webhook Payload: $PAYLOAD"
        echo "::set-output name=payload::$PAYLOAD"
        _jq() {
              echo ${PAYLOAD} | base64 --decode | jq -r ${1}
            }
        ACTION=$(_jq '.repository.name')
        FULL_NAME=$(_jq '.repository.full_name')
        ISSUE_RESPONSE=$(curl -X POST -u ${{ secrets.API_TOKEN }} -d "{\"title\":\"$FULL_NAME\",\"body\":\"$FULL_NAME\"}" "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues")
        echo "GitHub Issuee Creation Response: $ISSUE_RESPONSE"
    
    - name: Issue Created
      if: success()
      run: echo "GitHub issue created successfully."

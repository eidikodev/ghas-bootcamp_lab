name: Create GitHub Issue from Webhook Payload

on:
  workflow_dispatch
  #push:
    #branches:
      #- main  # Define the branch to trigger the workflow (adjust as needed)

jobs:
  create-issue:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Extract Deliveries
      id: extract-delivery-id
      run: |
        # Extract Delivery ID from the webhook payload
        API_RESPONSE=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries")
        echo $API_RESPONSE
        DELIVERY_ID=$(echo $API_RESPONSE | jq -r '.[0].id')
        if [ -z "$DELIVERY_ID" ]; then
          echo "No deliveries found or error in API response."
          exit 1
        fi
        echo "Delivery ID: $DELIVERY_ID"
        echo $API_RESPONSE >> deliveries.json
    
    - name: Get Webhook Payload
      id: get-webhook-payload
      run: |
        # Get the webhook payload using the Delivery ID
        TOKEN="${{ secrets.GITHUB_TOKEN }}"
        REPO_OWNER="${{ github.repository_owner }}"
        REPO_NAME="${{ github.event.repository.name }}"
        DELIVERIES=$(cat deliveries.json)
        echo "Looping Deliveries"
        for DELIVERIE in $(echo "${DELIVERIES}" | jq -r '.[] | @base64'); do
          _jq() {
              echo ${DELIVERIE} | base64 --decode | jq -r ${1}
            }
          DELIVERY_ID=$(_jq '.id')
          echo $DELIVERY_ID
          if [ -z "$DELIVERY_ID" ]; then
            echo "No Delivery ID found. Exiting."
            exit 1
          fi

          PAYLOAD=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries/${DELIVERY_ID}")
          if [ -z "$PAYLOAD" ]; then
            echo "No payload found or error in API response."
            exit 1
          fi
          echo "Webhook Payload"
          ACTION=$(echo "$PAYLOAD" | jq -r '.action')
          if [ "$ACTION" != "reopened" ]; then
            echo "Action is not 'created'. Skipping further process for delivery ID: $DELIVERY_ID"
          else
            echo "Action is 'created'. Continuing further Issue creation process for delivery ID: $DELIVERY_ID"
            SECRET=$(echo "$PAYLOAD" | jq -r '.request.payload.alert.secret_type')
            HTML_URL=$(echo "$PAYLOAD" | jq -r '.request.payload.alert.html_url')
            ASSIGNEE="srkambham"  # Specify the assignee's username here
            echo $SECRET
            echo $HTML_URL
            ISSUE_RESPONSE=$(curl -X POST -u ${{ secrets.API_TOKEN }} -d "{\"title\":\"$SECRET\",\"body\":\"$HTML_URL\",\"assignees\":[\"$ASSIGNEE\"]}" "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues")
            echo "GitHub Issue Creation Response:"
          fi
          echo "======================================================================"
        done
        echo "======================================================================"
    
    - name: Issue Created
      if: success()
      run: echo "GitHub issues created for deliveries, of action created, successfully."

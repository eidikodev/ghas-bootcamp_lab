name: Create GitHub Issue from Webhook Payload

on:
  push:
    branches:
      - Sunil0916-patch-2  # Define the branch to trigger the workflow (adjust as needed)

jobs:
  create-issue:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Extract Delivery ID
      id: extract-delivery-id
      run: |
        # Extract Delivery ID from the webhook payload
        API_RESPONSE=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries")
        DELIVERY_ID=$(echo $API_RESPONSE | jq -r '.[0].id')
        
        if [ -z "$DELIVERY_ID" ]; then
          echo "No deliveries found or error in API response."
          exit 1
        fi
        
        echo "Delivery ID: $DELIVERY_ID"
        echo "::set-output name=delivery_id::$DELIVERY_ID"
    
    - name: Get Webhook Payload
      id: get-webhook-payload
      run: |
        # Get the webhook payload using the Delivery ID
        DELIVERY_ID="${{ steps.extract-delivery-id.outputs.delivery_id }}"
        
        if [ -z "$DELIVERY_ID" ]; then
          echo "No Delivery ID found. Exiting."
          exit 1
        fi
        
        PAYLOAD=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries/${DELIVERY_ID}")
        
        if [ -z "$PAYLOAD" ]; then
          echo "No payload found or error in API response."
          exit 1
        fi
        
        echo "Webhook Payload: $PAYLOAD"
        echo "::set-output name=payload::$PAYLOAD"
    
    - name: Create GitHub Issue
      id: create-github-issue
      uses: actions/github-script@v4
      with:
        script: |
          // Extract relevant information from the payload
          const payload = JSON.parse(process.env.PAYLOAD);
          const ACTION = payload.action;
          const HTML_URL = payload.repository.html_url;
          const FULL_NAME = payload.repository.full_name;
          
          // Create a GitHub issue using the extracted information
          const ISSUE_TITLE = `Webhook Action: ${ACTION}`;
          const ISSUE_BODY = `This issue is created by a webhook action triggered on the repository: [${FULL_NAME}](${HTML_URL}).`;
          
          const response = await github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: ISSUE_TITLE,
            body: ISSUE_BODY
          });
          
          console.log(`GitHub Issue Creation Response: ${response.status}`);
    
    - name: Issue Created
      if: success()
      run: echo "GitHub issue created successfully."

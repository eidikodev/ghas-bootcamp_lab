name: Create GitHub Issues from Webhook Payload

on:
  workflow_dispatch
  push:
    branches:
      - main  # Define the branch to trigger the workflow (adjust as needed)

jobs:
  create-issues:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Get Webhook Deliveries
      id: get-webhook-deliveries
      run: |
        # Get all webhook deliveries
        API_RESPONSE=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries")
        echo "::set-output name=deliveries::$API_RESPONSE"
    
    - name: Loop through Deliveries and Create Issues
      run: |
        deliveries="${{ steps.get-webhook-deliveries.outputs.deliveries }}"
        for delivery in $(echo "$deliveries" | jq -r '.[].id'); do
          # Get the webhook payload using the Delivery ID
          PAYLOAD=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries/$delivery")
          
          # Extract the "action" field from the payload
          ACTION=$(echo "$PAYLOAD" | jq -r '.action')
          
          # Get the timestamp of the delivery
          DELIVERY_TIMESTAMP=$(echo "$PAYLOAD" | jq -r '.created_at')
          
          # Calculate the time difference in seconds
          CURRENT_TIMESTAMP=$(date +%s)
          DELIVERY_TIMESTAMP=$(date -d "$DELIVERY_TIMESTAMP" +%s)
          TIME_DIFF=$((CURRENT_TIMESTAMP - DELIVERY_TIMESTAMP))
          
          # Check if the action is "created" and within the last 24 hours
          if [ "$ACTION" = "closed_by_user" ] && [ "$TIME_DIFF" -le 86400 ]; then
            SECRET=$(echo "$PAYLOAD" | jq -r '.request.payload.alert.url')
            HTML_URL=$(echo "$PAYLOAD" | jq -r '.request.payload.alert.html_url')
            ASSIGNEE="srkambham"  # Specify the assignee's username here
            echo "Creating issue for Delivery ID: $delivery"
            ISSUE_RESPONSE=$(curl -X POST -u ${{ secrets.API_TOKEN }} -d "{\"title\":\"$SECRET\",\"body\":\"$HTML_URL\",\"assignees\":[\"$ASSIGNEE\"]}" "https://api.github.com/repos/${{ github.repository }}/issues")
            echo "GitHub Issue Creation Response: $ISSUE_RESPONSE"
          fi
        done

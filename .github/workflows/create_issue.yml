name: Create GitHub Issue from Webhook Payload

on:
  push:
    branches:
      - main  # Define the branch to trigger the workflow (adjust as needed)
      - Sunil0916-patch-1
jobs:
  create-issue:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Extract Delivery ID
      id: extract-delivery-id
      run: |
        # Extract Delivery ID from the webhook payload
        API_RESPONSE=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries")
        DELIVERY_ID=$(echo $API_RESPONSE | jq -r '.[0].id')
        
        if [ -z "$DELIVERY_ID" ]; then
          echo "No deliveries found or error in API response."
          exit 1
        fi
        
        echo "Delivery ID: $DELIVERY_ID"
        echo "::set-output name=delivery_id::$DELIVERY_ID"
    
    - name: Get Webhook Payload
      id: get-webhook-payload
      run: |
        # Get the webhook payload using the Delivery ID
        DELIVERY_ID="${{ steps.extract-delivery-id.outputs.delivery_id }}"
        
        if [ -z "$DELIVERY_ID" ]; then
          echo "No Delivery ID found. Exiting."
          exit 1
        fi
        
        PAYLOAD=$(curl -s -X GET -u ${{ secrets.API_TOKEN }} "https://api.github.com/repos/${{ github.repository }}/hooks/${{ secrets.WEBHOOK_HOOK_ID }}/deliveries/${DELIVERY_ID}")
        
        if [ -z "$PAYLOAD" ]; then
          echo "No payload found or error in API response."
          exit 1
        fi
        
        echo "Webhook Payload: $PAYLOAD"
        echo "::set-output name=payload::$PAYLOAD"
    
    - name: Create GitHub Issue
      id: create-github-issue
      run: |
        # Extract relevant information from the payload
        ACTION=$(echo "$PAYLOAD" | jq -r '.action')
        HTML_URL=$(echo "$PAYLOAD" | jq -r '.repository.html_url')
        FULL_NAME=$(echo "$PAYLOAD" | jq -r '.repository.full_name')
        
        if [ -z "$ACTION" ] || [ -z "$HTML_URL" ] || [ -z "$FULL_NAME" ]; then
          echo "Failed to extract relevant information from the payload."
          exit 1
        fi
        
        # Create a GitHub issue using the extracted information
        ISSUE_TITLE="Webhook Action: $ACTION"
        ISSUE_BODY="This issue is created by a webhook action triggered on the repository: [$FULL_NAME]($HTML_URL)."
        
        JSON_PAYLOAD="{\"title\":\"$ISSUE_TITLE\",\"body\":\"$ISSUE_BODY\"}"
        
        # Create the GitHub issue
        ISSUE_RESPONSE=$(curl -s -X POST -u ${{ secrets.API_TOKEN }} -H "Accept: application/vnd.github.v3+json" -d "$JSON_PAYLOAD" "https://api.github.com/repos/${{ github.repository }}/issues")
        
        if [ -z "$ISSUE_RESPONSE" ]; then
          echo "Failed to create GitHub issue."
          exit 1
        fi
        
        #echo "GitHub Issue Creation Response: $ISSUE_RESPONSE"
      #env:
        #PAYLOAD: ${{ steps.get-webhook-payload.outputs.payload }}
    
    - name: Issue Created
      if: success()
      run: echo "GitHub issue created successfully."
